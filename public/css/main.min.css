*{font-family:"Jura",sans-serif;-webkit-box-sizing:border-box;box-sizing:border-box}a,li,ul{left:0;text-decoration:none}a,li{list-style:none}.dn{display:none}a,abbr,acronym,address,applet,b,big,blockquote,body,caption,center,cite,code,dd,del,dfn,div,dl,dt,em,fieldset,font,form,h1,h2,h3,h4,h5,h6,html,i,iframe,img,ins,kbd,label,legend,li,object,ol,p,pre,q,s,samp,small,span,strike,strong,sub,sup,table,tbody,td,tfoot,th,thead,tr,tt,u,ul,var{margin:0;padding:0;border:0;outline:0;font-size:100%;vertical-align:baseline;background:0 0}body{line-height:1;padding-top:40px}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:after,blockquote:before,q:after,q:before{content:none}:focus{outline:0}ins{text-decoration:none}del{text-decoration:line-through}table{border-collapse:collapse;border-spacing:0}.wrapper{max-width:1760px;margin:0 auto}.header__wrapper{display:-webkit-box;display:-ms-flexbox;display:flex;width:100%;height:70px;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.logo{z-index:1000}.nav,.nav__title::before{background:#ff5d2a;position:absolute}.nav{top:0;right:0;left:0;width:100%;height:0;overflow:hidden;-webkit-transition:.3s;-o-transition:.3s;transition:.3s}.nav__title{color:#2e0056;font-weight:400;font-size:36px;position:relative;cursor:pointer}.nav__title::before{content:"";top:50%;left:-55px;-webkit-transform:translateY(50%);-ms-transform:translateY(50%);transform:translateY(50%);width:45px;height:2px}.nav__title::after{content:"";position:absolute;top:0;left:-100%;width:200%;height:100%;cursor:pointer}.nav__btn{background:url(../img/close.svg) no-repeat center;width:68px;height:68px;position:fixed;top:35px;right:80px;cursor:pointer;-webkit-transition:all .5s;-o-transition:all .5s;transition:all .5s;display:none;z-index:1000}.nav__btn.active{display:inline-block}.nav__btn:hover{-webkit-transform:rotate(180deg);-ms-transform:rotate(180deg);transform:rotate(180deg)}.nav__list{padding-top:150px;padding-left:450px}.nav__item{margin-bottom:104px}.nav__item-link{color:#fff;font-weight:700;font-size:72px;-webkit-transition:all .2s;-o-transition:all .2s;transition:all .2s}.nav__item-link:hover{color:#2e0056}.nav__social{position:absolute;left:80px;bottom:120px}.social{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-ms-flex-align:center;align-items:center;width:60px}.social-link{margin-top:30px;-webkit-transition:all .2s;-o-transition:all .2s;transition:all .2s}.social-link:hover{-webkit-transform:rotate(5deg) scale(1.03) translateY(-10%);-ms-transform:rotate(5deg) scale(1.03) translateY(-10%);transform:rotate(5deg) scale(1.03) translateY(-10%)}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */